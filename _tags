true: warn(@5@8@10@11@12@14@23@24@26@29@40), bin_annot, safe_string, debug
"data": -traverse

<src/*.{ml,mli,byte,native}>: package(dynlink), package(compiler-libs.common), package(ppx_tools.metaquot), package(findlib)
<src_plugins/*.{ml,mli}>: package(compiler-libs.common), package(ppx_tools.metaquot), use_ppx_deriving

<src_test/*.{ml,byte,native}>: debug, package(oUnit)
"src_test/test_deriving_show.ml": deriving(show)
"src_test/test_deriving_eq.ml": deriving(eq)
"src_test/test_deriving_ord.ml": deriving(ord)
"src_test/test_deriving_enum.ml": deriving(show,enum)
"src_test/test_deriving_iter.ml": deriving(iter)
"src_test/test_deriving_map.ml": deriving(show,map)
"src_test/test_deriving_fold.ml": deriving(fold)
"src_test/test_deriving_conv.ml": deriving(conv)
"src_test/test_ppx_deriving.ml": deriving(show,ord)
